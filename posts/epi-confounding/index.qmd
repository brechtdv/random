---
title: "Confounding"
description: "Identifying and addressing confounding in observational data"
date: "`r Sys.Date()`"
---

# Dummy dataset

To demonstrate confounding in the relationship between coffee consumption and cardiovascular disease (CVD), using tobacco as a confounder, we first generate a dummy dataset with three variables: coffee consumption, CVD status, and tobacco use. We will assume that tobacco use affects both coffee consumption and the likelihood of CVD.

```{r}
# Settings
set.seed(123)  # for reproducibility
n <- 500       # number of iterations

# Generate tobacco use (confounder)
tobacco <- rbinom(n, 1, 0.4)  # 40% smokers

# Generate coffee consumption based on tobacco use (confounder effect)
# Smokers are more likely to drink coffee
coffee <- rbinom(n, 1, prob = 0.2 + 0.5 * tobacco)  

# Generate CVD based on tobacco use and coffee consumption
# Tobacco is a stronger predictor of CVD
CVD <- rbinom(n, 1, prob = 0.1 + 0.3 * tobacco + 0.05 * coffee)

# Create the data frame
data <- data.frame(coffee, tobacco, CVD)

# Examine the first few rows of the dataset
head(data)
```

# Visualising confounding

To visually check for confounding in the relationship between coffee consumption and cardiovascular disease (CVD), we can use several types of plots in R. These plots help illustrate how the confounder (tobacco) influences both the exposure (coffee consumption) and the outcome (CVD).

## Correlation heatmap

The pairwise correlations between the variables can be visualised in a heatmap:

```{r}
# Load the required package
library(ggcorrplot)

# Compute the correlation matrix
corr_matrix <- cor(data)

# Plot the correlation heatmap
ggcorrplot(
  corr_matrix, method = "circle",
  lab = TRUE, title = "Correlation Matrix: Coffee, Tobacco, and CVD")
```
Interpretation:

- Coffee and Tobacco have a moderate positive correlation, as expected, since smokers are more likely to drink coffee in this simulated dataset.
- Tobacco and CVD show a stronger positive correlation, reflecting that smoking increases the risk of cardiovascular disease.
- Coffee and CVD have a weaker positive correlation, which may be confounded by tobacco use.
    
## Scatterplot with Grouping (Exposure vs. Outcome with Confounder Grouping)

A scatterplot or barplot that groups the data by the confounder (tobacco) can visually show the confounding effect. In this case, we can plot the relationship between coffee and CVD, with separate lines or bars for smokers and non-smokers.

```{r}
library(ggplot2)

# Create a bar plot showing CVD rate by coffee consumption, stratified by tobacco use
ggplot(data, aes(x = factor(coffee), fill = factor(CVD))) +
  geom_bar(position = "fill") +
  facet_wrap(~ tobacco, labeller = labeller(tobacco = c("0" = "Non-smokers", "1" = "Smokers"))) +
  labs(x = "Coffee Consumption", fill = "CVD Status", y = "Proportion") +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "red")) +
  ggtitle("CVD Proportion by Coffee Consumption (Stratified by Tobacco Use)")
```
This plot shows how the relationship between coffee and CVD changes when stratified by tobacco use. If there is confounding, the relationship between coffee and CVD should look different for smokers and non-smokers.

Vice versa, we can plot the relationship between tobacco use and CVD, stratified by coffee consumption. If there is confounding, the relationship between tobacco and CVD should look similar for coffee consumers and non-consumers.

```{r}
# Create a bar plot showing CVD rate by coffee consumption, stratified by tobacco use
ggplot(data, aes(x = factor(tobacco), fill = factor(CVD))) +
  geom_bar(position = "fill") +
  facet_wrap(~ coffee, labeller = labeller(coffee = c("0" = "No coffee", "1" = "Coffee"))) +
  labs(x = "Tobacco use", fill = "CVD Status", y = "Proportion") +
  scale_fill_manual(values = c("0" = "lightblue", "1" = "red")) +
  ggtitle("CVD Proportion by Tobacco use (Stratified by Coffee Consumption)")
```

## Interaction Plot (Coffee, CVD, and Tobacco)

An interaction plot can help visually assess whether there is an interaction effect between coffee consumption and tobacco use on the likelihood of CVD. It shows the predicted probabilities or the mean CVD rate across different groups.

```{r}
# Calculate mean CVD rate by coffee and tobacco groups
mean_cvd <- aggregate(CVD ~ coffee + tobacco, data = data, FUN = mean)

# Interaction plot
ggplot(mean_cvd, aes(x = factor(coffee), y = CVD, color = factor(tobacco), group = tobacco)) +
  geom_line(linewidth = 1.2) +
  geom_point(linewidth = 3) +
  labs(x = "Coffee Consumption", y = "Mean CVD Rate", color = "Tobacco Use") +
  ggtitle("Interaction Plot: Coffee Consumption, Tobacco, and Mean CVD Rate")

```
This plot illustrates how the relationship between coffee consumption and CVD varies by tobacco use. If tobacco is a confounder, the slopes for smokers and non-smokers should differ, suggesting that the effect of coffee on CVD is not the same for both groups.

# Model-based identification of confounding

We can analyze the relationship between coffee and CVD without adjusting for tobacco use and then include tobacco use to observe its confounding effect.

First, we can see if there is a relationship between coffee consumption and CVD without considering tobacco as a confounder.

```{r}
# Unadjusted model (coffee vs CVD)
unadjusted_model <- glm(CVD ~ coffee, data = data, family = "binomial")
summary(unadjusted_model)
```

This will give us the log odds ratio for the effect of coffee consumption on CVD without considering tobacco.

Now, we adjust for tobacco use to see if the relationship between coffee and CVD changes after accounting for the confounder.

```{r}
# Adjusted model (coffee vs CVD, adjusting for tobacco)
adjusted_model <- glm(CVD ~ coffee + tobacco, data = data, family = "binomial")
summary(adjusted_model)
```

By comparing the coefficients in both models, we can observe the confounding effect of tobacco on the coffee-CVD relationship.

# Approaches to Handle Confounding

## Stratification by tobacco use

We can stratify the analysis by tobacco use to compare the effect of coffee on CVD within each group (smokers and non-smokers).

```{r}
# Stratified analysis for non-smokers
non_smokers <- subset(data, tobacco == 0)
strat_model_ns <- glm(CVD ~ coffee, data = non_smokers, family = "binomial")
summary(strat_model_ns)

# Stratified analysis for smokers
smokers <- subset(data, tobacco == 1)
strat_model_sm <- glm(CVD ~ coffee, data = smokers, family = "binomial")
summary(strat_model_sm)
```
Based on the stratified results, we can calculate the pooled Mantel-Haenszel odds ratio.

```{r}
# Load required package
library(epiR)

# Combine tobacco as a stratifying variable in a 2x2x2 table format
mantel_haenszel_table <- table(data$coffee, data$CVD, data$tobacco)
mantel_haenszel_table

# Apply Mantel-Haenszel Odds Ratio (MH OR)
epi.2by2(mantel_haenszel_table, method = "cross.sectional")
```


## Regression adjustment

As done earlier, logistic regression models can adjust for tobacco use. This method is often more convenient than stratification.

```{r}
# The adjusted model shown earlier adjusts for tobacco use
summary(adjusted_model)

# Odds ratio based on the adjusted model
cbind(
  OR = exp(coef(adjusted_model)),
  exp(confint(adjusted_model)))
```
Note how the adjusted OR for coffee consumption is similar to the Mantel-Haenszel corrected OR. 

## Classification tree

Classification trees provide a hierarchical structure of relationships between variables. By examining the tree structure, we can see which variables are driving the splits (important predictors of the outcome). If a variable that could be a potential confounder (e.g., age, smoking status) is frequently chosen to split the data, it may indicate that this variable plays an important role in explaining the outcome.

Random forests, an extension of decision trees, consist of an ensemble of decision trees where each tree is trained on a random subset of the data and variables. Random forests rank variables by their importance in predicting the outcome. If a potential confounder (e.g., smoking) has high importance, it suggests that this variable influences both the outcome (e.g., CVD) and the exposure (e.g., coffee consumption), signaling confounding.

```{r}
library(rpart)
library(randomForest)

# Fit classification tree
fitTree <- rpart(factor(CVD) ~ coffee + tobacco, data = data)
print(fitTree)

# Fit random forest
rf <- randomForest(factor(CVD) ~ coffee + tobacco, data = data, ntree = 1000)

# Show variable importance
importance(rf)
```

## G-computation

G-computation (or the G-formula) is a causal inference method derived from the counterfactual framework, often used to estimate the causal effect of an exposure on an outcome, adjusting for confounders. G-computation models the outcome (e.g., cardiovascular disease, CVD) under different hypothetical scenarios of the exposure (e.g., coffee consumption) and then averages these over the distribution of confounders (e.g., tobacco use).

The G-formula provides a direct way to adjust for confounding by estimating the expected outcome for both treated and untreated groups if everyone in the population had the same level of exposure, regardless of their actual exposure. 

Steps for G-Computation:

- Fit an outcome model: Model the relationship between the confounder (tobacco), the exposure (coffee), and the outcome (CVD).
- Predict counterfactual outcomes: Use the model to predict the probability of CVD for everyone in the dataset assuming two different scenarios:
  - Everyone drank coffee (`coffee = 1`).
  - No one drank coffee (`coffee = 0`).
- Estimate the causal effect: Compare the average predicted outcomes under the two scenarios to estimate the causal effect of coffee consumption on CVD.

```{r}
# Fit a logistic regression model for the outcome
outcome_model <- glm(CVD ~ coffee + tobacco, data = data, family = binomial)
summary(outcome_model)

# Create a copy of the data with coffee set to 1 (everyone drinks coffee)
data_coffee1 <- data
data_coffee1$coffee <- 1

# Predict the probability of CVD for everyone if all drank coffee
pred_coffee1 <- predict(outcome_model, newdata = data_coffee1, type = "response")

# Create a copy of the data with coffee set to 0 (no one drinks coffee)
data_coffee0 <- data
data_coffee0$coffee <- 0

# Predict the probability of CVD for everyone if no one drank coffee
pred_coffee0 <- predict(outcome_model, newdata = data_coffee0, type = "response")

# Calculate the mean predicted probability of CVD under both scenarios
mean_pred_coffee1 <- mean(pred_coffee1)
mean_pred_coffee0 <- mean(pred_coffee0)

# Calculate the average causal effect (risk difference)
causal_effect <- mean_pred_coffee1 - mean_pred_coffee0
causal_effect

```


# R session info

```{r}
sessionInfo()
```
